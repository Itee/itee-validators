function isNull(r){return null===r}function isNotNull(r){return null!==r}function isUndefined(r){return void 0===r}function isNotUndefined(r){return void 0!==r}function isNullOrUndefined(r){return null===r||void 0===r}function isDefined(r){return null!==r&&void 0!==r}function isEmpty(r){if(null===r)return!0;if(void 0===r)return!0;if(r.length>0)return!1;if(0===r.length)return!0;for(let n in r)if(Object.prototype.hasOwnProperty.call(r,n))return!1;return!0}function isNotEmpty(r){return!isEmpty(r)}function isString(r){return"string"==typeof r||r instanceof String}function isNotString(r){return"string"!=typeof r}function isEmptyString(r){return console.assert(isString(r),"Expect a string !"),0===r.length}function isNotEmptyString(r){if(isNotString(r))throw new TypeError("Expect a string !");return r.length>0}function isBlankString(r){if(isEmptyString(r))throw new TypeError("Expect a non empty string !");return!/\S/.test(r)}function isNotBlankString(r){return isNotEmptyString(r)&&/\S/.test(r)}function isObject(r){return isNotNull(r)&&"object"==typeof r&&!Array.isArray(r)}function isNotObject(r){return!isObject(r)}function isEmptyObject(r){return isObject(r)&&isEmpty(r)}function isNotEmptyObject(r){return isObject(r)&&isNotEmpty(r)}function isArray(r){return Array.isArray(r)}function isNotArray(r){return!Array.isArray(r)}function isArrayOfNull(r){if(isNotArray(r))return!1;const n=r.length;if(0===n)return!1;for(let t=0;t<n;t++)if(isNotNull(r[t]))return!1;return!0}function isNotArrayOfNull(r){if(isNotArray(r))return!0;const n=r.length;if(0===n)return!0;for(let t=0;t<n;t++)if(isNull(r[t]))return!1;return!0}function isEmptyArray(r){return!isNotArray(r)&&0===r.length}function isNotEmptyArray(r){return!!isNotArray(r)||r.length>0}function isArrayOfUndefined(r){if(isNotArray(r))return!1;if(0===r.length)return!1;for(let n=0,t=r.length;n<t;n+=1)if(isDefined(r[n]))return!1;return!0}function isNotArrayOfUndefined(r){if(isNotArray(r))return!0;const n=r.length;if(0===n)return!0;for(let t=0;t<n;t++)if(isUndefined(r[t]))return!0;return!1}function isArrayOfArray(r){if(isNotArray(r))return!1;const n=r.length;if(0===n)return!1;for(let t=0;t<n;t+=1)if(isNotArray(r[t]))return!1;return!0}function isNotArrayOfArray(r){if(isNotArray(r))return!0;const n=r.length;if(0===n)return!0;for(let t=0;t<n;t++)if(isArray(r[t]))return!1;return!0}function isArrayOfString(r){if(isNotArray(r))return!1;const n=r.length;if(0===n)return!1;for(let t=0;t<n;t++)if(isNotString(r[t]))return!1;return!0}function isNotArrayOfString(r){if(isNotArray(r))return!0;const n=r.length;if(0===n)return!0;for(let t=0;t<n;t++)if(isString(r[t]))return!1;return!0}function isArrayOfSingleElement(r){return!isNotArray(r)&&1===r.length}function isArrayOfMultiElement(r){return!isNotArray(r)&&!(r.length<=1)}function isArrayOfObject(r){if(isNotArray(r))return!1;if(0===r.length)return!1;for(let n=0,t=r.length;n<t;n+=1)if(isNotObject(r[n]))return!1;return!0}function isNotArrayOfObject(r){if(isNotArray(r))return!0;const n=r.length;if(0===n)return!0;for(let t=0;t<n;t++)if(isObject(r[t]))return!0;return!1}function isBoolean(r){return"boolean"==typeof r}function isNotBoolean(r){return"boolean"!=typeof r}function isFunction(r){return"function"==typeof r}function isNotFunction(r){return"function"!=typeof r}function isNumber(r){return"number"==typeof r&&!Number.isNaN(r)}function isNumber_1(r){return Number(r)===r}function isNotNumber(r){return"number"!=typeof r||Number.isNaN(r)}function isNaN(r){return Number.isNaN(r)}function isNumberPositive(r){return isNumber(r)&&r>0}function isNumberNegative(r){return isNumber(r)&&r<0}function isNumeric(r){return"number"==typeof r}function isNotNumeric(r){return"number"!=typeof r}function isInteger(r){return 0===r&&1/r===Number.POSITIVE_INFINITY}function isFloat(r){return r%1!=0}function isZero(r){return 0===r}function isZeroPositive(r){return 0===r&&1/r===Number.POSITIVE_INFINITY}function isZeroNegative(r){return 0===r&&1/r===Number.NEGATIVE_INFINITY}function isMinSafeInteger(r){return r===Number.MIN_SAFE_INTEGER}function isMinPositive(r){return r===Number.MIN_VALUE}function isMinNegative(r){return r===-Number.MIN_VALUE}function isMaxSafeInteger(r){return r===Number.MAX_SAFE_INTEGER}function isMaxPositive(r){return r===Number.MAX_VALUE}function isMaxNegative(r){return r===-Number.MAX_VALUE}function isFinite(r){return Number.isFinite(r)}function isInfinite(r){return!Number.isFinite(r)}function isInfiniteNegative(r){return r===Number.NEGATIVE_INFINITY}function isInfinitePositive(r){return r===Number.POSITIVE_INFINITY}function isSymbol(r){return"symbol"==typeof r}function isNotSymbol(r){return"symbol"!=typeof r}function isKelvin(r){return isNumber(r)&&r>=ABSOLUTE_ZERO_KELVIN}function isNotKelvin(r){return!isKelvin(r)}function isCelsius(r){return isNumber(r)&&r>=ABSOLUTE_ZERO_CELSIUS}function isNotCelsius(r){return!isCelsius(r)}function isFahrenheit(r){return isNumber(r)&&r>=ABSOLUTE_ZERO_FAHRENHEIT}function isNotFahrenheit(r){return!isFahrenheit(r)}function isTemperature(r){return isKelvin(r)||isCelsius(r)||isFahrenheit(r)}function isNotTemperature(r){return isNotKelvin(r)&&isNotCelsius(r)&&isNotFahrenheit(r)}class Validator{constructor(){this.validators={Boolean:isBoolean,Number:isNumber,Integer:isInteger,Float:isFloat,Array:isArray,String:isString,Object:isObject,Symbol:isSymbol,Function:isFunction},this.errors=[]}add(r,n){if(isNotString(r))throw new TypeError(`Validator: Expect type to be a string`);if(isNotFunction(n)&&isNotObject(n))throw new TypeError(`Validator: Expect validator to be an object or a function`);if(isDefined(this.validators[r]))throw new TypeError(`Validator: a validator is already defined for type '${r}'`);this.validators[r]=n}remove(r){delete this.validators[r]}getAvalaibleTypes(){const r=[];for(let n in this.validators)r.push(n);return r}check(r,n,t=!0){const i=this.validators[n];if(isNullOrUndefined(i))throw new TypeError(`Validator: Unable to find schema validation of type '${n}'`);let e=!0;if(isFunction(i))e=i(r);else{if(!isObject(i))throw new TypeError(`Validator: Unknown validator of type '${n}'`);{let u=!0;for(let o in i){const s=i[o];if(isNullOrUndefined(s))throw new TypeError(`Validator: Missing validator for key '${o}' of type '${n}'`);const f=r[o],N=s.required;if(isNullOrUndefined(f)){if(!N)continue;u=!1}let c=s.fn;if(isDefined(c)){if(isNotFunction(c))throw new TypeError(`Validator: Invalid validation function for '${o}' with type '${n}'`);u=c(f)}else u=this.check(f,s.type,t);if(!1===u&&(this.errors.push(`Validator: Invalid property '${o}' of type '${s.type}' with value '${f}' in object of type '${n}'`),e=!1,t))break}}}return e}}let validatorInstance=void 0;isNullOrUndefined(validatorInstance)&&(validatorInstance=new Validator);const ABSOLUTE_ZERO_KELVIN=4.5e-10,ABSOLUTE_ZERO_CELSIUS=-273.14999999955,ABSOLUTE_ZERO_FAHRENHEIT=-459.67;export{isArray,isNotArray,isArrayOfNull,isNotArrayOfNull,isEmptyArray,isNotEmptyArray,isArrayOfUndefined,isNotArrayOfUndefined,isArrayOfArray,isNotArrayOfArray,isArrayOfString,isNotArrayOfString,isArrayOfSingleElement,isArrayOfMultiElement,isArrayOfObject,isNotArrayOfObject,isBoolean,isNotBoolean,isFunction,isNotFunction,isNumber,isNumber_1,isNotNumber,isNaN,isNumberPositive,isNumberNegative,isNumeric,isNotNumeric,isInteger,isFloat,isZero,isZeroPositive,isZeroNegative,isMinSafeInteger,isMinPositive,isMinNegative,isMaxSafeInteger,isMaxPositive,isMaxNegative,isFinite,isInfinite,isInfiniteNegative,isInfinitePositive,isObject,isNotObject,isEmptyObject,isNotEmptyObject,isString,isNotString,isEmptyString,isNotEmptyString,isBlankString,isNotBlankString,isSymbol,isNotSymbol,isNull,isNotNull,isUndefined,isNotUndefined,isNullOrUndefined,isDefined,isEmpty,isNotEmpty,validatorInstance as Validator,ABSOLUTE_ZERO_KELVIN,ABSOLUTE_ZERO_CELSIUS,ABSOLUTE_ZERO_FAHRENHEIT,isKelvin,isNotKelvin,isCelsius,isNotCelsius,isFahrenheit,isNotFahrenheit,isTemperature,isNotTemperature};
//# sourceMappingURL=itee-validators.es.min.js.map
