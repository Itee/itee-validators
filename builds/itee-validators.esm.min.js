function n(n){return Array.isArray(n)}function r(n){return!Array.isArray(n)}function t(n){return!r(n)&&0===n.length}function e(n){return!!r(n)||n.length>0}function u(n){if(r(n))return!1;if(t(n))return!1;for(let t=0,e=n.length;t<e;t++)if(r(n[t]))return!1;return!0}function i(e){if(r(e))return!0;if(t(e))return!0;for(let r=0,t=e.length;r<t;r++)if(n(e[r]))return!1;return!0}function o(n){return!r(n)&&n.length>1}function f(n){return null===n}function c(n){return null!==n}function a(n){if(r(n))return!1;if(t(n))return!1;for(let r=0,t=n.length;r<t;r++)if(c(n[r]))return!1;return!0}function l(n){if(r(n))return!0;if(t(n))return!0;for(let r=0,t=n.length;r<t;r++)if(c(n[r]))return!0;return!1}function s(n){return null!=n}function y(n){return null==n}function h(n){return!y(n)&&n.constructor===Object}function N(n){return!h(n)}function p(n){if(r(n))return!1;if(t(n))return!1;for(let r=0,t=n.length;r<t;r++)if(N(n[r]))return!1;return!0}function d(n){if(r(n))return!0;if(t(n))return!0;for(let r=0,t=n.length;r<t;r++)if(N(n[r]))return!0;return!1}function b(n){return!r(n)&&1===n.length}function I(n){return"string"==typeof n||n instanceof String}function A(n){return!I(n)}function g(n){if(r(n))return!1;if(t(n))return!1;for(let r=0,t=n.length;r<t;r++)if(A(n[r]))return!1;return!0}function E(n){if(r(n))return!0;if(t(n))return!0;for(let r=0,t=n.length;r<t;r++)if(A(n[r]))return!0;return!1}function m(n){return void 0===n}function v(n){return void 0!==n}function w(n){if(r(n))return!1;if(t(n))return!1;for(let r=0,t=n.length;r<t;r++)if(v(n[r]))return!1;return!0}function T(n){if(r(n))return!0;if(t(n))return!0;for(let r=0,t=n.length;r<t;r++)if(v(n[r]))return!0;return!1}function V(n){return"boolean"==typeof n}function F(n){return"boolean"!=typeof n}function _(n){return V(n)&&!0===n}function U(n){return V(n)&&!1===n}function $(n){return"function"==typeof n}function S(n){return"function"!=typeof n}function M(n){return 0===n}function O(n){return 0===n&&1/n===Number.POSITIVE_INFINITY}function j(n){return 0===n&&1/n===Number.NEGATIVE_INFINITY}function k(n){return!y(n)&&n.constructor===Number}function B(n){return!L(n)&&(n>0||O(n)||q(n))}function G(n){return k(n)&&n<0}function L(n){return!k(n)}function Y(n){return Number.isInteger(n)}function x(n){return!L(n)&&(!Number.isNaN(n)&&(!X(n)&&n%1!=0))}function P(n){return Number.isNaN(n)}function X(n){return!L(n)&&(!Number.isNaN(n)&&!Number.isFinite(n))}function R(n){return n===Number.NEGATIVE_INFINITY}function q(n){return n===Number.POSITIVE_INFINITY}function C(n){return Number.isFinite(n)}function z(n){return n===Number.MAX_VALUE}function D(n){return n===-Number.MAX_VALUE}function H(n){return n===Number.MIN_VALUE}function J(n){return n===-Number.MIN_VALUE}function K(n){return n===Number.MAX_SAFE_INTEGER}function Q(n){return n===Number.MIN_SAFE_INTEGER}function W(n){if(N(n))return!1;if(0===n.length)return!0;for(let r in n)if(Object.prototype.hasOwnProperty.call(n,r))return!1;return!0}function Z(n){return!W(n)}function nn(n){return!A(n)&&0===n.length}function rn(n){return!nn(n)}function tn(n){return!A(n)&&(!nn(n)&&!/\S/.test(n))}function en(n){return!tn(n)}function un(n){return"symbol"==typeof n}function on(n){return"symbol"!=typeof n}function fn(n){return!y(n)&&(!!nn(n)||(!!t(n)||!!W(n)))}function cn(n){return!fn(n)}class an{constructor(){this.validators={Boolean:V,Number:k,Integer:Y,Float:x,Array:n,String:I,Object:h,Symbol:un,Function:$},this.errors=[]}add(n,r){if(A(n))throw new TypeError("Validator: Expect type to be a string");if(S(r)&&N(r))throw new TypeError("Validator: Expect validator to be an object or a function");if(s(this.validators[n]))throw new TypeError(`Validator: a validator is already defined for type '${n}'`);this.validators[n]=r}remove(n){delete this.validators[n]}getAvalaibleTypes(){const n=[];for(let r in this.validators)n.push(r);return n}check(n,r,t=!0){const e=this.validators[r];if(y(e))throw new TypeError(`Validator: Unable to find schema validation of type '${r}'`);let u=!0;if($(e))u=e(n);else{if(!h(e))throw new TypeError(`Validator: Unknown validator of type '${r}'`);{let i=!0;for(let o in e){const f=e[o];if(y(f))throw new TypeError(`Validator: Missing validator for key '${o}' of type '${r}'`);const c=n[o],a=f.required;if(y(c)){if(!a)continue;i=!1}let l=f.fn;if(s(l)){if(S(l))throw new TypeError(`Validator: Invalid validation function for '${o}' with type '${r}'`);i=l(c)}else i=this.check(c,f.type,t);if(!1===i&&(this.errors.push(`Validator: Invalid property '${o}' of type '${f.type}' with value '${c}' in object of type '${r}'`),u=!1,t))break}}}return u}}let ln=void 0;function sn(n){return n instanceof ArrayBuffer}function yn(n){return!sn(n)}function hn(n){return n instanceof BigInt64Array}function Nn(n){return!hn(n)}function pn(n){return n instanceof BigUint64Array}function dn(n){return!pn(n)}function bn(n){return n instanceof Float32Array}function In(n){return!bn(n)}function An(n){return n instanceof Float64Array}function gn(n){return!An(n)}function En(n){return n instanceof Int16Array}function mn(n){return!En(n)}function vn(n){return n instanceof Int32Array}function wn(n){return!vn(n)}function Tn(n){return n instanceof Int8Array}function Vn(n){return!Tn(n)}function Fn(n){return n instanceof Uint16Array}function _n(n){return!Fn(n)}function Un(n){return n instanceof Uint32Array}function $n(n){return!Un(n)}function Sn(n){return n instanceof Uint8Array}function Mn(n){return!Sn(n)}function On(n){return n instanceof Uint8ClampedArray}function jn(n){return!On(n)}y(ln)&&(ln=new an);const kn=4.5e-10,Bn=-273.14999999955,Gn=-459.67;function Ln(n){return k(n)&&n>=Bn}function Yn(n){return!Ln(n)}function xn(n){return k(n)&&n>=Gn}function Pn(n){return!xn(n)}function Xn(n){return k(n)&&n>=kn}function Rn(n){return!Xn(n)}function qn(n){return Xn(n)||Ln(n)||xn(n)}function Cn(n){return Rn(n)&&Yn(n)&&Pn(n)}export{Bn as ABSOLUTE_ZERO_CELSIUS,Gn as ABSOLUTE_ZERO_FAHRENHEIT,kn as ABSOLUTE_ZERO_KELVIN,ln as Validator,n as isArray,sn as isArrayBuffer,u as isArrayOfArray,o as isArrayOfMultiElement,a as isArrayOfNull,p as isArrayOfObject,b as isArrayOfSingleElement,g as isArrayOfString,w as isArrayOfUndefined,hn as isBigInt64Array,pn as isBigUint64Array,tn as isBlankString,V as isBoolean,Ln as isCelsius,s as isDefined,fn as isEmpty,t as isEmptyArray,W as isEmptyObject,nn as isEmptyString,xn as isFahrenheit,U as isFalse,C as isFinite,x as isFloat,bn as isFloat32Array,An as isFloat64Array,$ as isFunction,X as isInfinite,R as isInfiniteNegative,q as isInfinitePositive,En as isInt16Array,vn as isInt32Array,Tn as isInt8Array,Y as isInteger,Xn as isKelvin,D as isMaxNegative,z as isMaxPositive,K as isMaxSafeInteger,J as isMinNegative,H as isMinPositive,Q as isMinSafeInteger,P as isNaN,r as isNotArray,yn as isNotArrayBuffer,i as isNotArrayOfArray,l as isNotArrayOfNull,d as isNotArrayOfObject,E as isNotArrayOfString,T as isNotArrayOfUndefined,Nn as isNotBigInt64Array,dn as isNotBigUint64Array,en as isNotBlankString,F as isNotBoolean,Yn as isNotCelsius,y as isNotDefined,cn as isNotEmpty,e as isNotEmptyArray,Z as isNotEmptyObject,rn as isNotEmptyString,Pn as isNotFahrenheit,In as isNotFloat32Array,gn as isNotFloat64Array,S as isNotFunction,mn as isNotInt16Array,wn as isNotInt32Array,Vn as isNotInt8Array,Rn as isNotKelvin,c as isNotNull,L as isNotNumber,N as isNotObject,A as isNotString,on as isNotSymbol,Cn as isNotTemperature,_n as isNotUint16Array,$n as isNotUint32Array,Mn as isNotUint8Array,jn as isNotUint8ClampedArray,v as isNotUndefined,f as isNull,k as isNumber,G as isNumberNegative,B as isNumberPositive,h as isObject,I as isString,un as isSymbol,qn as isTemperature,_ as isTrue,Fn as isUint16Array,Un as isUint32Array,Sn as isUint8Array,On as isUint8ClampedArray,m as isUndefined,M as isZero,j as isZeroNegative,O as isZeroPositive};
//# sourceMappingURL=itee-validators.esm.min.js.map
