{"version":3,"file":"itee-validators.iife.js","sources":["../sources/cores/arrays/isArray.js","../sources/cores/arrays/isEmptyArray.js","../sources/cores/arrays/isArrayOfArray.js","../sources/cores/arrays/isArrayOfMultiElement.js","../sources/cores/voids/isNull.js","../sources/cores/arrays/isArrayOfNull.js","../sources/cores/voids/isDefined.js","../sources/cores/objects/isObject.js","../sources/cores/arrays/isArrayOfObject.js","../sources/cores/arrays/isArrayOfSingleElement.js","../sources/cores/strings/isString.js","../sources/cores/arrays/isArrayOfString.js","../sources/cores/voids/isUndefined.js","../sources/cores/arrays/isArrayOfUndefined.js","../sources/cores/arrays/_arrays.js","../sources/cores/booleans/isBoolean.js","../sources/cores/booleans/isTrue.js","../sources/cores/booleans/_booleans.js","../sources/cores/functions/isFunction.js","../sources/cores/functions/_functions.js","../sources/cores/numbers/isZero.js","../sources/cores/numbers/isNumber.js","../sources/cores/numbers/isInfinite.js","../sources/cores/numbers/isMax.js","../sources/cores/numbers/isMin.js","../sources/cores/numbers/isSafeInteger.js","../sources/cores/numbers/_numbers.js","../sources/cores/objects/isEmptyObject.js","../sources/cores/objects/_objects.js","../sources/cores/strings/isEmptyString.js","../sources/cores/strings/isBlankString.js","../sources/cores/strings/_strings.js","../sources/cores/symbols/isSymbol.js","../sources/cores/symbols/_symbols.js","../sources/cores/voids/isEmpty.js","../sources/cores/voids/_voids.js","../sources/cores/cores.js","../sources/cores/typed_arrays/isArrayBuffer.js","../sources/cores/typed_arrays/isBigInt64Array.js","../sources/cores/typed_arrays/isBigUint64Array.js","../sources/cores/typed_arrays/isFloat32Array.js","../sources/cores/typed_arrays/isFloat64Array.js","../sources/cores/typed_arrays/isInt16Array.js","../sources/cores/typed_arrays/isInt32Array.js","../sources/cores/typed_arrays/isInt8Array.js","../sources/cores/typed_arrays/isUint16Array.js","../sources/cores/typed_arrays/isUint32Array.js","../sources/cores/typed_arrays/isUint8Array.js","../sources/cores/typed_arrays/isUint8ClampedArray.js","../sources/cores/typed_arrays/_typed_arrays.js","../sources/cores/_cores.js","../sources/maths/_maths.js","../sources/physics/temperatures/constants.js","../sources/physics/temperatures/isCelsius.js","../sources/physics/temperatures/isFahrenheit.js","../sources/physics/temperatures/isKelvin.js","../sources/physics/temperatures/isTemperature.js","../sources/physics/temperatures/_temperatures.js","../sources/physics/_physics.js","../sources/itee-validators.js"],"sourcesContent":["/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array or not\r\n * @example\r\n *\r\n * import { isArray } from 'itee-validators'\r\n *\r\n * if( isArray( value ) ) {\r\n *     //...\r\n * } else {\r\n *     //...\r\n * }\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is an array\r\n *\r\n * @param data {*} The data to check against the array type\r\n * @returns {boolean} true if data is array, false otherwise\r\n */\r\nexport function isArray ( data ) {\r\n    return Array.isArray( data )\r\n}\r\n\r\n// #if IS_REMOVE\r\n\r\n// Not exported alternative for benchmark\r\nexport function isArray_0 ( data ) {\r\n    return data instanceof Array\r\n}\r\n\r\n// #endif\r\n\r\n////////////////////\r\n\r\n/**\r\n * Check if given data is not an array\r\n *\r\n * @param data {*} The data to check against the array type\r\n * @returns {boolean} true if data is not array, false otherwise\r\n */\r\nexport function isNotArray ( data ) {\r\n    return !Array.isArray( data )\r\n}\r\n\r\n// #if IS_REMOVE\r\n\r\nexport function isNotArray_0 ( data ) {\r\n    return !isArray( data )\r\n}\r\n\r\n// #endif\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotArray } from './isArray'\r\n\r\n/**\r\n * Check if given data is an empty array\r\n *\r\n * @param data {*} The data to check against the empty array\r\n * @returns {boolean} true if data is an empty array, false otherwise\r\n */\r\nexport function isEmptyArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    return ( data.length === 0 )\r\n\r\n}\r\n\r\n///////\r\n\r\n/**\r\n * Check if given data is not an empty array\r\n *\r\n * @param data {*} The data to check against the empty array\r\n * @returns {boolean} true if data is not an empty array, false otherwise\r\n */\r\nexport function isNotEmptyArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n\r\n    return ( data.length > 0 )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport {\r\n    isArray,\r\n    isNotArray\r\n}                       from './isArray'\r\nimport { isEmptyArray } from './isEmptyArray'\r\n\r\n/**\r\n * Check if given data is an array of array\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is an array of array, false otherwise\r\n */\r\nexport function isArrayOfArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is not an array of array\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an array of array, false otherwise\r\n */\r\nexport function isNotArrayOfArray ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isArray( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotArray } from './isArray'\r\n\r\n/**\r\n * Check if given data is an array with multiples values\r\n *\r\n * @param data {*} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with multiples values, false otherwise\r\n */\r\nexport function isArrayOfMultiElement ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    return ( data.length > 1 )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is null\r\n *\r\n * @param data {*} The data to check against the nullity\r\n * @returns {boolean} true if data is null, false otherwise.\r\n */\r\nexport function isNull ( data ) {\r\n    return ( data === null )\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is not null\r\n *\r\n * @param data {*} The data to check against the nullity\r\n * @returns {boolean} true if data is not null, false otherwise.\r\n */\r\nexport function isNotNull ( data ) {\r\n    return ( data !== null )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotNull }    from '../voids/isNull'\r\nimport { isNotArray }   from './isArray'\r\nimport { isEmptyArray } from './isEmptyArray'\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are null\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are null, false otherwise\r\n */\r\nexport function isArrayOfNull ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotNull( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not null\r\n *\r\n * @param data {*} The data to check against the array of array type\r\n * @returns {boolean} true if data is not an empty array where all values are not null, false otherwise\r\n */\r\nexport function isNotArrayOfNull ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotNull( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is not null and not undefined\r\n *\r\n * @param data {*} The data to check against the existence\r\n * @returns {boolean} true if data is not null and not undefined, false otherwise.\r\n */\r\nexport function isDefined ( data ) {\r\n    return ( ( data !== null ) && ( typeof data !== 'undefined' ) )\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is null or undefined\r\n *\r\n * @param data {*} The data to check against the existence\r\n * @returns {boolean} true if data is null or undefined, false otherwise.\r\n */\r\nexport function isNotDefined ( data ) {\r\n    return ( ( data === null ) || ( typeof data === 'undefined' ) )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/objects\r\n * @desc Export function to validate if a value is an object\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotDefined } from '../voids/isDefined'\r\n\r\n/**\r\n * Check if given data is an object\r\n *\r\n * @param data {*} The data to check against the object type\r\n * @returns {boolean} true if data is object, false otherwise\r\n */\r\nexport function isObject ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n\r\n    return ( data.constructor === Object )\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an object\r\n *\r\n * @param data {*} The data to check against the object type\r\n * @returns {boolean} true if data is not an object, false otherwise\r\n */\r\nexport function isNotObject ( data ) {\r\n    return !isObject( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotObject }  from '../objects/isObject'\r\nimport { isNotArray }   from './isArray'\r\nimport { isEmptyArray } from './isEmptyArray'\r\n\r\n/**\r\n * Check if given data is an array where all values are of object type\r\n *\r\n * @param data {*} The data to check against the array of object type\r\n * @returns {boolean} true if data is an array where all values are of object type, false otherwise\r\n */\r\nexport function isArrayOfObject ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotObject( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an array where all values are of object type\r\n *\r\n * @param data {*} The data to check against the array of object type\r\n * @returns {boolean} true if data is not an array where all values are of object type, false otherwise\r\n */\r\nexport function isNotArrayOfObject ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotObject( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotArray } from './isArray'\r\n\r\n/**\r\n * Check if given data is an array with a single value\r\n *\r\n * @param data {*} The data to check against the single valued array\r\n * @returns {boolean} true if data is an array with a single value, false otherwise\r\n */\r\nexport function isArrayOfSingleElement ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n\r\n    if ( data.length !== 1 ) {\r\n        return false\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a string\r\n *\r\n * @param data {*} The data to check against the string type\r\n * @returns {boolean} true if data is a string, false otherwise.\r\n */\r\nexport function isString ( data ) {\r\n    return ( typeof data === 'string' || data instanceof String )\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isString_0 ( val ) {\r\n    return ( typeof val === 'string' )\r\n}\r\n\r\nexport function isString_1 ( val ) {\r\n    return ( typeof val === 'string' || ( ( !!val && typeof val === 'object' ) && Object.prototype.toString.call( val ) === '[object String]' ) )\r\n}\r\n\r\nexport function isString_2 ( val ) {\r\n    return ( Object.prototype.toString.call( val ) === '[object String]' )\r\n}\r\n\r\nexport function isString_3 ( val ) {\r\n    return ( val !== null && val !== undefined && val.constructor === String )\r\n}\r\n\r\nexport function isString_4 ( val ) {\r\n    return ( val === val + '' )\r\n}\r\n\r\n// #endif\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a string\r\n *\r\n * @param data {*} The data to check against the string type\r\n * @returns {boolean} true if data is not a string, false otherwise.\r\n */\r\nexport function isNotString ( data ) {\r\n    return !isString( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotString }  from '../strings/isString'\r\nimport { isNotArray }   from './isArray'\r\nimport { isEmptyArray } from './isEmptyArray'\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are string\r\n *\r\n * @param data {*} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are string, false otherwise\r\n */\r\nexport function isArrayOfString ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotString( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isArrayOfString_1 ( data ) {\r\n\r\n    if ( !Array.isArray( data ) ) {\r\n        return false\r\n    }\r\n\r\n    const dataLength = data.length\r\n    if ( dataLength === 0 ) {\r\n        return false\r\n    }\r\n\r\n    for ( let index = 0, arrayLength = data.length ; index < arrayLength ; index += 1 ) {\r\n        if ( typeof data[ index ] !== 'string' ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n// #endif\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are not string\r\n *\r\n * @param data {*} The data to check against the array of strings\r\n * @returns {boolean} true if data is not an empty array where all values are not string, false otherwise\r\n */\r\nexport function isNotArrayOfString ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotString( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is undefined\r\n *\r\n * @param data {*} The data to check against the undefiness\r\n * @returns {boolean} true if data is undefined, false otherwise.\r\n */\r\nexport function isUndefined ( data ) {\r\n    return ( typeof data === 'undefined' )\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is defined\r\n *\r\n * @param data {*} The data to check against the undefiness\r\n * @returns {boolean} true if data is defined, false otherwise.\r\n */\r\nexport function isNotUndefined ( data ) {\r\n    return ( typeof data !== 'undefined' )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/arrays\r\n * @desc Export function to validate if a value is an array of array or not\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotUndefined } from '../voids/isUndefined'\r\nimport { isNotArray }     from './isArray'\r\nimport { isEmptyArray }   from './isEmptyArray'\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are undefined\r\n *\r\n * @param data {*} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are undefined, false otherwise\r\n */\r\nexport function isArrayOfUndefined ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return false }\r\n    if ( isEmptyArray( data ) ) { return false }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotUndefined( data[ index ] ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty array where all values are defined\r\n *\r\n * @param data {*} The data to check against the array of undefined\r\n * @returns {boolean} true if data is not an empty array where all values are defined, false otherwise\r\n */\r\nexport function isNotArrayOfUndefined ( data ) {\r\n\r\n    if ( isNotArray( data ) ) { return true }\r\n    if ( isEmptyArray( data ) ) { return true }\r\n\r\n    for ( let index = 0, dataLength = data.length ; index < dataLength ; index++ ) {\r\n        if ( isNotUndefined( data[ index ] ) ) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    return false\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_arrays\r\n * @description Export the validation methods about Arrays\r\n */\r\n\r\nexport * from './isArray'\r\nexport * from './isArrayOfArray'\r\nexport * from './isArrayOfMultiElement'\r\nexport * from './isArrayOfNull'\r\nexport * from './isArrayOfObject'\r\nexport * from './isArrayOfSingleElement'\r\nexport * from './isArrayOfString'\r\nexport * from './isArrayOfUndefined'\r\nexport * from './isEmptyArray'\r\n\r\n//todo: isArrayOfNumbers\r\n//todo: isArrayOfBooleans\r\n//todo: isArrayOfFunctions\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/booleans\r\n * @desc Export function to validate if a value is a boolean or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a boolean\r\n *\r\n * @param data {*} The data to check against the booleaness\r\n * @returns {boolean} true if data is a boolean, false otherwise.\r\n */\r\nexport function isBoolean ( data ) {\r\n    return ( typeof data === 'boolean' )\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isBoolean_alt ( value ) {\r\n    return typeof value === 'boolean' || ( typeof value === 'object' && value !== null && typeof value.valueOf() === 'boolean' )\r\n}\r\n\r\n// #endif\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a boolean\r\n *\r\n * @param data {*} The data to check against the booleaness\r\n * @returns {boolean} true if data is not a boolean, false otherwise.\r\n */\r\nexport function isNotBoolean ( data ) {\r\n    return ( typeof data !== 'boolean' )\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isNotBoolean_negbase ( data ) {\r\n    return !isBoolean( data )\r\n}\r\n\r\n// #endif\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nimport { isBoolean } from './isBoolean'\r\n\r\nexport function isTrue ( value ) {\r\n    return ( isBoolean( value ) && ( value === true ) )\r\n}\r\n\r\nexport function isFalse ( value ) {\r\n    return ( isBoolean( value ) && ( value === false ) )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_booleans\r\n * @description Export the validation methods about booleans\r\n *\r\n */\r\n\r\nexport * from './isBoolean'\r\nexport * from './isTrue'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/functions\r\n * @desc Export function to validate if a value is a function or not\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a function\r\n *\r\n * @param data {*} The data to check against the functionality\r\n * @returns {boolean} true if data is a function, false otherwise.\r\n */\r\nexport function isFunction ( data ) {\r\n    return ( typeof data === 'function' )\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if given data is not a function\r\n *\r\n * @param data {*} The data to check against the functionality\r\n * @returns {boolean} true if data is not a function, false otherwise.\r\n */\r\nexport function isNotFunction ( data ) {\r\n    return ( typeof data !== 'function' )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_functions\r\n * @description Export the validation methods about functions\r\n *\r\n */\r\n\r\nexport * from './isFunction'\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isZero\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is zero\r\n *\r\n * @param data {*} The data to check against the zero value\r\n * @returns {boolean} true if data is zero, false otherwise\r\n */\r\nexport function isZero ( data ) {\r\n    return ( data === 0 )\r\n}\r\n\r\n/**\r\n * Check if the given data is a positive zero\r\n *\r\n * @param data {*} The data to check against the positive zero value\r\n * @returns {boolean} true if data is a positive zero, false otherwise\r\n */\r\nexport function isZeroPositive ( data ) {\r\n    return ( data === 0 && ( 1 / data ) === Number.POSITIVE_INFINITY )\r\n}\r\n\r\n/**\r\n * Check if the given data is a negative zero\r\n *\r\n * @param data {*} The data to check against the negative zero value\r\n * @returns {boolean} true if data is a negative zero, false otherwise\r\n */\r\nexport function isZeroNegative ( data ) {\r\n    return ( data === 0 && ( 1 / data ) === Number.NEGATIVE_INFINITY )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isNumber\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotDefined }   from '../voids/isDefined'\r\nimport {\r\n    isInfinite,\r\n    isInfinitePositive\r\n}                         from './isInfinite'\r\nimport { isZeroPositive } from './isZero'\r\n\r\n/**\r\n * Check if given data is a number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a number, false otherwise.\r\n */\r\nexport function isNumber ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n\r\n    return ( data.constructor === Number )\r\n\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isNumber_0 ( data ) {\r\n    return ( typeof data === 'number' && !Number.isNaN( data ) )\r\n}\r\n\r\nexport function isNumber_1 ( data ) {\r\n    return ( Number( data ) === data )\r\n}\r\n\r\n// #endif\r\n\r\n/**\r\n * Check if the data is a positive number\r\n *\r\n * @param data {*} The data to check against the positivity\r\n * @returns {boolean} true if data is a positive number, false otherwise.\r\n */\r\nexport function isNumberPositive ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n\r\n    return ( data > 0 || isZeroPositive( data ) || isInfinitePositive( data ) )\r\n\r\n}\r\n\r\n/**\r\n * Check if the data is a negative number\r\n *\r\n * @param data {*} The data to check against the negativity\r\n * @returns {boolean} true if data is a negative number, false otherwise.\r\n */\r\nexport function isNumberNegative ( data ) {\r\n    return ( isNumber( data ) && data < 0 )\r\n}\r\n\r\n//////\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {*} The data to check against the number type\r\n * @returns {boolean} true if data is not of type number or not a number, false otherwise.\r\n */\r\nexport function isNotNumber ( data ) {\r\n    return !( isNumber( data ) )\r\n}\r\n\r\n/////////\r\n\r\n//Todo: isInRange(x, y, value, xInclusive, yInclusive)\r\n//Todo: isInRangeZeroOne(value, zeroInclusive, oneInclusive) //inclusive\r\n\r\n/////////\r\n\r\n/**\r\n * Check if the given data is an integer number\r\n *\r\n * @param data {*} The data to check against the integer state\r\n * @returns {boolean} true if data is an integer, false otherwise\r\n */\r\nexport function isInteger ( data ) {\r\n    return Number.isInteger( data )\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isInteger_0 ( data ) {\r\n    return ( data === 0 && ( 1 / data ) === Number.POSITIVE_INFINITY )\r\n}\r\n\r\nexport function isInteger_1 ( data ) {\r\n    return data % 1 === 0\r\n}\r\n\r\nexport function isInteger_2 ( n ) {\r\n    return n === +n && n === ( n | 0 )\r\n}\r\n\r\nexport function isInteger_3 ( nVal ) {\r\n    return typeof nVal === 'number' && isFinite( nVal ) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor( nVal ) === nVal\r\n}\r\n\r\n// #endif\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is a floating point number\r\n *\r\n * @param data {*} The data to check against the floating point\r\n * @returns {boolean} true if data is a float, false otherwise\r\n */\r\nexport function isFloat ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n    if ( Number.isNaN( data ) ) { return false }\r\n    if ( isInfinite( data ) ) { return false}\r\n\r\n    return data % 1 !== 0\r\n\r\n}\r\n\r\n// #if IS_REMOVE\r\nexport function isFloat_1 ( n ) {\r\n    return n === +n && n !== ( n | 0 )\r\n}\r\n\r\nexport function isFloat_2 ( x ) {\r\n    return !!( x % 1 )\r\n}\r\n\r\n// #endif\r\n\r\n////////\r\n\r\n/**\r\n * Check if given data is not a number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is not a number, false otherwise.\r\n */\r\nexport function isNaN ( data ) {\r\n    return Number.isNaN( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isInfinite\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotNumber } from './isNumber'\r\n\r\n/**\r\n * Check if the given data is an infinite number\r\n *\r\n * @param data {*} The data to check against the infinite state\r\n * @returns {boolean} true if data is infinite, false otherwise\r\n */\r\nexport function isInfinite ( data ) {\r\n\r\n    if ( isNotNumber( data ) ) { return false }\r\n    if ( Number.isNaN( data ) ) { return false }\r\n\r\n    return !Number.isFinite( data )\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite negative number\r\n *\r\n * @param data {*} The data to check against the negative infinite state\r\n * @returns {boolean} true if data is negative infinite, false otherwise\r\n */\r\nexport function isInfiniteNegative ( data ) {\r\n    return ( data === Number.NEGATIVE_INFINITY )\r\n}\r\n\r\n/**\r\n * Check if the given data is an infinite positive number\r\n *\r\n * @param data {*} The data to check against the positive infinite state\r\n * @returns {boolean} true if data is positive infinite, false otherwise\r\n */\r\nexport function isInfinitePositive ( data ) {\r\n    return ( data === Number.POSITIVE_INFINITY )\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check if the given data is a finite number\r\n *\r\n * @param data {*} The data to check against the finite state\r\n * @returns {boolean} true if data is finite, false otherwise\r\n */\r\nexport function isFinite ( data ) {\r\n    return Number.isFinite( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isMax\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a maximum positive number\r\n *\r\n * @param data {*} The data to check against the positive maximum state\r\n * @returns {boolean} true if data is positive maximum, false otherwise\r\n */\r\nexport function isMaxPositive ( data ) {\r\n    return ( data === Number.MAX_VALUE )\r\n}\r\n\r\n/**\r\n * Check if the given data is a maximum negative number\r\n *\r\n * @param data {*} The data to check against the maximum infinite state\r\n * @returns {boolean} true if data is negative maximum, false otherwise\r\n */\r\nexport function isMaxNegative ( data ) {\r\n    return ( data === -Number.MAX_VALUE )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isMin\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a minimum positive number\r\n *\r\n * @param data {*} The data to check against the positive minimum state\r\n * @returns {boolean} true if data is positive minimum, false otherwise\r\n */\r\nexport function isMinPositive ( data ) {\r\n    return ( data === Number.MIN_VALUE )\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum negative number\r\n *\r\n * @param data {*} The data to check against the minimum infinite state\r\n * @returns {boolean} true if data is negative minimum, false otherwise\r\n */\r\nexport function isMinNegative ( data ) {\r\n    return ( data === -Number.MIN_VALUE )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/numbers/isSafeInteger\r\n * @desc Export function to validate if a value is a finite number\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if the given data is a maximum safe integer number\r\n *\r\n * @param data {*} The data to check against the maximum safe integer state\r\n * @returns {boolean} true if data is a maximum safe integer, false otherwise\r\n */\r\nexport function isMaxSafeInteger ( data ) {\r\n    return ( data === Number.MAX_SAFE_INTEGER )\r\n}\r\n\r\n/**\r\n * Check if the given data is a minimum safe integer number\r\n *\r\n * @param data {*} The data to check against the minimum safe integer state\r\n * @returns {boolean} true if data is a minimum safe integer, false otherwise\r\n */\r\nexport function isMinSafeInteger ( data ) {\r\n    return ( data === Number.MIN_SAFE_INTEGER )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_numbers\r\n * @description Export the validation methods about numbers\r\n *\r\n */\r\n\r\nexport * from './isInfinite'\r\nexport * from './isMax'\r\nexport * from './isMin'\r\nexport * from './isNumber'\r\nexport * from './isSafeInteger'\r\nexport * from './isZero'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/objects\r\n * @desc Export function to validate if a value is an object\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotObject } from './isObject'\r\n\r\n/**\r\n * Check if given data is an empty object\r\n *\r\n * @param data {*} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is an empty object, false otherwise\r\n */\r\nexport function isEmptyObject ( data ) {\r\n\r\n    if ( isNotObject( data ) ) { return false }\r\n\r\n    if ( data.length === 0 ) {\r\n        return true\r\n    }\r\n\r\n    // Otherwise, does it have any properties of its own?\r\n    for ( let key in data ) {\r\n        if ( Object.prototype.hasOwnProperty.call( data, key ) ) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty object\r\n *\r\n * @param data {*} The data to check against the emptiness of the object\r\n * @returns {boolean} true if data is not an empty object, false otherwise\r\n */\r\nexport function isNotEmptyObject ( data ) {\r\n    return !( isEmptyObject( data ) )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_objects\r\n * @description Export the validation methods about objects\r\n */\r\n\r\nexport * from './isEmptyObject'\r\nexport * from './isObject'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNotString } from './isString'\r\n\r\n/**\r\n * Check if given data is an empty string\r\n *\r\n * @param data {*} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is an empty string, false otherwise.\r\n */\r\nexport function isEmptyString ( data ) {\r\n\r\n    if ( isNotString( data ) ) {\r\n        return false\r\n    }\r\n\r\n    return ( data.length === 0 )\r\n\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if given data is not an empty string\r\n *\r\n * @param data {*} The data to check against the emptiness of the string\r\n * @returns {boolean} true if data is not an empty string, false otherwise.\r\n */\r\nexport function isNotEmptyString ( data ) {\r\n\r\n    return !( isEmptyString( data ) )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/strings\r\n * @desc Export function to validate if a value is a string\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isEmptyString } from './isEmptyString'\r\nimport { isNotString }   from './isString'\r\n\r\n/**\r\n * Check if the given data is a blank string\r\n *\r\n * @param data {*} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is a blank string, false otherwise.\r\n */\r\nexport function isBlankString ( data ) {\r\n\r\n    if ( isNotString( data ) ) { return false }\r\n    if ( isEmptyString( data ) ) { return false }\r\n\r\n    return ( !/\\S/.test( data ) )\r\n}\r\n\r\n////\r\n\r\n/**\r\n * Check if the given data is not a blank string\r\n *\r\n * @param data {*} The data to check against the blankness of the string\r\n * @returns {boolean} true if data is not a blank string, false otherwise.\r\n */\r\nexport function isNotBlankString ( data ) {\r\n\r\n    return !( isBlankString( data ) )\r\n\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_strings\r\n * @description Export the validation methods about strings\r\n */\r\n\r\nexport * from './isBlankString'\r\nexport * from './isEmptyString'\r\nexport * from './isString'\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/symbols\r\n * @desc Export function to validate if a value is a symbol\r\n * @example todo\r\n *\r\n */\r\n\r\n/**\r\n * Check if given data is a symbol\r\n *\r\n * @param data {*} The data to check against the symbol type\r\n * @returns {boolean} true if data is a symbol, false otherwise.\r\n */\r\nexport function isSymbol ( data ) {\r\n    return ( typeof data === 'symbol' )\r\n}\r\n\r\n/////\r\n\r\n/**\r\n * Check if given data is not a symbol\r\n *\r\n * @param data {*} The data to check against the symbol type\r\n * @returns {boolean} true if data is not a symbol, false otherwise.\r\n */\r\nexport function isNotSymbol ( data ) {\r\n    return ( typeof data !== 'symbol' )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_symbols\r\n * @description Export the validation methods about symbols\r\n */\r\n\r\nexport * from './isSymbol'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/voids\r\n * @desc Export function to validate if a value is a void\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isEmptyArray }  from '../arrays/isEmptyArray'\r\nimport { isEmptyObject } from '../objects/isEmptyObject'\r\nimport { isEmptyString } from '../strings/isEmptyString'\r\nimport { isNotDefined }  from './isDefined'\r\n\r\n/**\r\n * Check emptiness of given data\r\n *\r\n * See: https://stackoverflow.com/questions/4346186/how-to-determine-if-a-function-is-empty\r\n *\r\n * @param data {*} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as empty, false otherwise.\r\n */\r\nexport function isEmpty ( data ) {\r\n\r\n    if ( isNotDefined( data ) ) { return false }\r\n    if ( isEmptyString( data ) ) { return true}\r\n    if ( isEmptyArray( data ) ) { return true }\r\n    if ( isEmptyObject( data ) ) { return true }\r\n\r\n    return false\r\n\r\n}\r\n\r\n///\r\n\r\n/**\r\n * Check fullness of given data\r\n *\r\n * @param data {*} The data to check against the emptiness\r\n * @returns {boolean} true if data is considered as not empty, false otherwise.\r\n */\r\nexport function isNotEmpty ( data ) {\r\n    return !isEmpty( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_voids\r\n * @description Export the validation methods about voids notions like null or undefined\r\n */\r\n\r\nexport * from './isDefined'\r\nexport * from './isEmpty'\r\nexport * from './isNull'\r\nexport * from './isUndefined'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module cores/cores\r\n * @description Export the Validator singleton instance that allow to validate complex data structure\r\n * @example\r\n *\r\n const validator = Itee.Validators.Validator\r\n\r\n // Using unique function for One registered type\r\n // Usefull when a simple data structure is used multiple times\r\n validator.add( 'ColorType', color => {\r\n\r\n                const r = color.r\r\n                if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\r\n                    return false\r\n                }\r\n\r\n                const g = color.g\r\n                if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\r\n                    return false\r\n                }\r\n\r\n                const b = color.b\r\n                if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            } )\r\n\r\n // Using schema composition\r\n // Usefull for design validation schema faster and based on previous declared validation types\r\n validator.add( 'Range_0_255', ( value ) => {\r\n\r\n                if ( Itee.Validators.isNotNumber( value ) ) {\r\n                    return false\r\n                }\r\n\r\n                return !(value < 0 || value > 255)\r\n\r\n            } )\r\n\r\n validator.add( 'ColorSchema', {\r\n                r: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                },\r\n                g: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                },\r\n                b: {\r\n                    required: true,\r\n                    type:     'Range_0_255'\r\n                }\r\n            } )\r\n\r\n validator.add( 'ColorStructure', {\r\n                color_from_type: {\r\n                    type: 'ColorType'\r\n                },\r\n                col_from_schema: {\r\n                    type: 'ColorSchema'\r\n                },\r\n                col_from_fn:     {\r\n                    // Inner function\r\n\t                // Usefull for specific validation requirement that cannot match other previous validation schema or type\r\n                    fn: function ColorValidator ( color ) {\r\n\r\n                        const r = color.r\r\n                        if ( color.r === undefined || Itee.Validators.isNotNumber( r ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        const g = color.g\r\n                        if ( color.g === undefined || Itee.Validators.isNotNumber( g ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        const b = color.b\r\n                        if ( color.b === undefined || Itee.Validators.isNotNumber( b ) ) {\r\n                            return false\r\n                        }\r\n\r\n                        return true\r\n                    }\r\n                }\r\n            } )\r\n\r\n // The data to validate\r\n const colorStruct = {\r\n                color_from_type: {\r\n                    r: 0,\r\n                    g: 1,\r\n                    b: 2\r\n                },\r\n                col_from_schema: {\r\n                    r: 10,\r\n                    g: 20,\r\n                    b: 30\r\n                },\r\n                col_from_fn:     {\r\n                    r: 0,\r\n                    g: 127,\r\n                    b: 255\r\n                }\r\n            }\r\n\r\n // Execute\r\n\r\n try {\r\n\r\n    if ( validator.check( colorStruct, 'ColorStructure' ) ) {\r\n        alert( 'ColorStructure is valid !' )\r\n    } else {\r\n        alert( validator.errors )\r\n    }\r\n\r\n} catch ( err ) {\r\n    alert( err )\r\n}\r\n *\r\n */\r\n\r\nimport { isArray }   from './arrays/_arrays'\r\nimport { isBoolean } from './booleans/_booleans'\r\nimport {\r\n    isFunction,\r\n    isNotFunction\r\n}                    from './functions/_functions'\r\nimport {\r\n    isFloat,\r\n    isInteger,\r\n    isNumber\r\n}                    from './numbers/_numbers'\r\nimport {\r\n    isNotObject,\r\n    isObject\r\n}                    from './objects/_objects'\r\nimport {\r\n    isNotString,\r\n    isString\r\n}                    from './strings/_strings'\r\nimport { isSymbol }  from './symbols/_symbols'\r\nimport {\r\n    isDefined,\r\n    isNotDefined\r\n}                    from './voids/_voids'\r\n\r\nclass Validator {\r\n\r\n    constructor () {\r\n\r\n        /**\r\n         * The validators store, by default it contains validators for Boolean, Number, Integer, Float, Array, String, Object, Symbol and Function\r\n         *\r\n         * @type {(function|object)}\r\n         */\r\n        this.validators = {\r\n            Boolean:  isBoolean,\r\n            Number:   isNumber,\r\n            Integer:  isInteger,\r\n            Float:    isFloat,\r\n            Array:    isArray,\r\n            String:   isString,\r\n            Object:   isObject,\r\n            Symbol:   isSymbol,\r\n            Function: isFunction\r\n        }\r\n\r\n        /**\r\n         * The list of errors occured during the check\r\n         *\r\n         * @type {Array.<string>}\r\n         */\r\n        this.errors = []\r\n\r\n    }\r\n\r\n    /**\r\n     * Add a new validator schema to the validator instance\r\n     *\r\n     * @param type {string} - A string that represent the type of data to validate\r\n     * @param validator {(function|object)} - A function or validation schema that represent the type of data to validate\r\n     */\r\n    add ( type, validator ) {\r\n\r\n        if ( isNotString( type ) ) { throw new TypeError( `Validator: Expect type to be a string` ) }\r\n        if ( isNotFunction( validator ) && isNotObject( validator ) ) { throw new TypeError( `Validator: Expect validator to be an object or a function` ) }\r\n        if ( isDefined( this.validators[ type ] ) ) { throw new TypeError( `Validator: a validator is already defined for type '${type}'` ) }\r\n\r\n        this.validators[ type ] = validator\r\n\r\n    }\r\n\r\n    /**\r\n     * To remove a registered type\r\n     *\r\n     * @param type {string} - The type to remove\r\n     */\r\n    remove ( type ) {\r\n\r\n        delete this.validators[ type ]\r\n\r\n    }\r\n\r\n    /**\r\n     * Allow to known the available types store in current validator instance\r\n     *\r\n     * @return {Array.<string>} - The list of registered type\r\n     */\r\n    getAvalaibleTypes () {\r\n\r\n        const availablesTypes = []\r\n\r\n        for ( let key in this.validators ) {\r\n            availablesTypes.push( key )\r\n        }\r\n\r\n        return availablesTypes\r\n\r\n    }\r\n\r\n    /**\r\n     * Will perform a deep structural comparison between the given data and the validation schema of the given type\r\n     *\r\n     * @param data {*} - The data to validate\r\n     * @param type {string} - The type of the validation schema to apply\r\n     * @param breakOnError {boolean} - Return on first validation error ( true by default )\r\n     * @return {boolean} - Return true is the data is validated, false otherwise\r\n     */\r\n    check ( data, type, breakOnError = true ) {\r\n\r\n        const validator = this.validators[ type ]\r\n        if ( isNotDefined( validator ) ) {\r\n            throw new TypeError( `Validator: Unable to find schema validation of type '${type}'` )\r\n        }\r\n\r\n        let result = true\r\n        if ( isFunction( validator ) ) {\r\n\r\n            result = validator( data )\r\n\r\n        } else if ( isObject( validator ) ) {\r\n\r\n            let subResult = true\r\n            for ( let key in validator ) {\r\n\r\n                const subValidator = validator[ key ]\r\n                if ( isNotDefined( subValidator ) ) {\r\n                    throw new TypeError( `Validator: Missing validator for key '${key}' of type '${type}'` )\r\n                }\r\n\r\n                const value      = data[ key ]\r\n                const isRequired = subValidator.required\r\n                if ( isNotDefined( value ) ) {\r\n                    if ( isRequired ) {\r\n                        subResult = false\r\n                    } else {\r\n                        continue\r\n                    }\r\n                }\r\n\r\n                // In case of overriden validation function check it first\r\n                let validatorFunction = subValidator.fn\r\n                if ( isDefined( validatorFunction ) ) {\r\n\r\n                    if ( isNotFunction( validatorFunction ) ) {\r\n                        throw new TypeError( `Validator: Invalid validation function for '${key}' with type '${type}'` )\r\n                    }\r\n\r\n                    subResult = validatorFunction( value )\r\n\r\n                } else {\r\n\r\n                    subResult = this.check( value, subValidator.type, breakOnError )\r\n\r\n                }\r\n\r\n                if ( subResult === false ) {\r\n\r\n                    this.errors.push( `Validator: Invalid property '${key}' of type '${subValidator.type}' with value '${value}' in object of type '${type}'` )\r\n                    result = false\r\n                    if ( breakOnError ) {\r\n                        break\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            throw new TypeError( `Validator: Unknown validator of type '${type}'` )\r\n\r\n        }\r\n\r\n        return result\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * The singleton instance\r\n *\r\n * @type {Validator}\r\n */\r\nlet validatorInstance = undefined\r\nif ( isNotDefined( validatorInstance ) ) {\r\n    validatorInstance = new Validator()\r\n}\r\n\r\nexport { validatorInstance as Validator }\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isArrayBuffer ( data ) {\r\n    return ( data instanceof ArrayBuffer )\r\n}\r\n\r\nexport function isNotArrayBuffer ( data ) {\r\n    return !isArrayBuffer( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isBigInt64Array ( data ) {\r\n    return ( data instanceof BigInt64Array )\r\n}\r\n\r\nexport function isNotBigInt64Array ( data ) {\r\n    return !isBigInt64Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isBigUint64Array ( data ) {\r\n    return ( data instanceof BigUint64Array )\r\n}\r\n\r\nexport function isNotBigUint64Array ( data ) {\r\n    return !isBigUint64Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isFloat32Array ( data ) {\r\n    return ( data instanceof Float32Array )\r\n}\r\n\r\nexport function isNotFloat32Array ( data ) {\r\n    return !isFloat32Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isFloat64Array ( data ) {\r\n    return ( data instanceof Float64Array )\r\n}\r\n\r\nexport function isNotFloat64Array ( data ) {\r\n    return !isFloat64Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isInt16Array ( data ) {\r\n    return ( data instanceof Int16Array )\r\n}\r\n\r\nexport function isNotInt16Array ( data ) {\r\n    return !isInt16Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isInt32Array ( data ) {\r\n    return ( data instanceof Int32Array )\r\n}\r\n\r\nexport function isNotInt32Array ( data ) {\r\n    return !isInt32Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isInt8Array ( data ) {\r\n    return ( data instanceof Int8Array )\r\n}\r\n\r\nexport function isNotInt8Array ( data ) {\r\n    return !isInt8Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isUint16Array ( data ) {\r\n    return ( data instanceof Uint16Array )\r\n}\r\n\r\nexport function isNotUint16Array ( data ) {\r\n    return !isUint16Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isUint32Array ( data ) {\r\n    return ( data instanceof Uint32Array )\r\n}\r\n\r\nexport function isNotUint32Array ( data ) {\r\n    return !isUint32Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isUint8Array ( data ) {\r\n    return ( data instanceof Uint8Array )\r\n}\r\n\r\nexport function isNotUint8Array ( data ) {\r\n    return !isUint8Array( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file Todo\r\n *\r\n * @example Todo\r\n *\r\n */\r\n\r\nexport function isUint8ClampedArray ( data ) {\r\n    return ( data instanceof Uint8ClampedArray )\r\n}\r\n\r\nexport function isNotUint8ClampedArray ( data ) {\r\n    return !isUint8ClampedArray( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './isArrayBuffer'\r\nexport * from './isBigInt64Array'\r\nexport * from './isBigUint64Array'\r\nexport * from './isFloat32Array'\r\nexport * from './isFloat64Array'\r\nexport * from './isInt16Array'\r\nexport * from './isInt32Array'\r\nexport * from './isInt8Array'\r\nexport * from './isUint16Array'\r\nexport * from './isUint32Array'\r\nexport * from './isUint8Array'\r\nexport * from './isUint8ClampedArray'\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/cores/_cores\r\n * @description This is the cores main export entry point.\r\n * It expose all exports of the voids, booleans, numbers, symbols, strings, arrays, objects and functions validators.\r\n *\r\n */\r\n\r\nexport * from './arrays/_arrays'\r\nexport * from './booleans/_booleans'\r\nexport * from './cores'\r\nexport * from './functions/_functions'\r\nexport * from './numbers/_numbers'\r\nexport * from './objects/_objects'\r\nexport * from './strings/_strings'\r\nexport * from './symbols/_symbols'\r\nexport * from './typed_arrays/_typed_arrays'\r\nexport * from './voids/_voids'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/maths/_maths\r\n * @description This is the maths export entry point.\r\n * It expose all exports of the ... sub-folder.\r\n *\r\n */\r\n\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export constants about temperatures\r\n * @example todo\r\n *\r\n */\r\n\r\nexport const ABSOLUTE_ZERO_KELVIN     = 0.00000000045\r\nexport const ABSOLUTE_ZERO_CELSIUS    = -273.14999999955\r\nexport const ABSOLUTE_ZERO_FAHRENHEIT = -459.67\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNumber }              from '../../cores/numbers/isNumber'\r\nimport { ABSOLUTE_ZERO_CELSIUS } from './constants'\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nexport function isCelsius ( data ) {\r\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_CELSIUS )\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nexport function isNotCelsius ( data ) {\r\n    return !isCelsius( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNumber }                 from '../../cores/numbers/isNumber'\r\nimport { ABSOLUTE_ZERO_FAHRENHEIT } from './constants'\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nexport function isFahrenheit ( data ) {\r\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_FAHRENHEIT )\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nexport function isNotFahrenheit ( data ) {\r\n    return !isFahrenheit( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\nimport { isNumber }             from '../../cores/numbers/isNumber'\r\nimport { ABSOLUTE_ZERO_KELVIN } from './constants'\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nexport function isKelvin ( data ) {\r\n    return ( isNumber( data ) && data >= ABSOLUTE_ZERO_KELVIN )\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nexport function isNotKelvin ( data ) {\r\n    return !isKelvin( data )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @module physics/temperatues\r\n * @desc Export function to validate if a value is a temperature\r\n * @example todo\r\n *\r\n */\r\n\r\nimport {\r\n    isCelsius,\r\n    isNotCelsius\r\n} from './isCelsius'\r\nimport {\r\n    isFahrenheit,\r\n    isNotFahrenheit\r\n} from './isFahrenheit'\r\nimport {\r\n    isKelvin,\r\n    isNotKelvin\r\n} from './isKelvin'\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean|*|boolean}\r\n */\r\nexport function isTemperature ( data ) {\r\n    return ( isKelvin( data ) || isCelsius( data ) || isFahrenheit( data ) )\r\n}\r\n\r\n///\r\n\r\n/**\r\n *\r\n * @param data\r\n * @return {boolean}\r\n */\r\nexport function isNotTemperature ( data ) {\r\n    return ( isNotKelvin( data ) && isNotCelsius( data ) && isNotFahrenheit( data ) )\r\n}\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/physics/_temperatures\r\n * @description Export the validation methods about temperatures\r\n */\r\n\r\nexport * from './constants'\r\nexport * from './isCelsius'\r\nexport * from './isFahrenheit'\r\nexport * from './isKelvin'\r\nexport * from './isTemperature'\r\n","/**\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/physics/_physics\r\n * @description This is the physics export entry point.\r\n * It expose all exports of the temperatures sub-folder.\r\n *\r\n */\r\n\r\nexport * from './temperatures/_temperatures'\r\n","/**\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n * _/\\\\\\\\\\\\\\\\\\\\\\________________________________________________________/\\\\\\________/\\\\\\_________________/\\\\\\\\\\\\__________________/\\\\\\_______________________________________________________________\r\n * _\\/////\\\\\\///________________________________________________________\\/\\\\\\_______\\/\\\\\\________________\\////\\\\\\_________________\\/\\\\\\______________________________________________________________\r\n * ______\\/\\\\\\_________/\\\\\\______________________________________________\\//\\\\\\______/\\\\\\____________________\\/\\\\\\_____/\\\\\\________\\/\\\\\\_____________________/\\\\\\____________________________________\r\n * _______\\/\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\_____________\\//\\\\\\____/\\\\\\____/\\\\\\\\\\\\\\\\\\_______\\/\\\\\\____\\///_________\\/\\\\\\___/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\_____/\\\\/\\\\\\\\\\\\\\___\r\n * ________\\/\\\\\\_____\\////\\\\\\////____/\\\\\\/////\\\\\\___/\\\\\\/////\\\\\\_____________\\//\\\\\\__/\\\\\\____\\////////\\\\\\______\\/\\\\\\_____/\\\\\\___/\\\\\\\\\\\\\\\\\\__\\////////\\\\\\___\\////\\\\\\////____/\\\\\\///\\\\\\__\\/\\\\\\/////\\\\\\_\r\n * _________\\/\\\\\\________\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\\\___/\\\\\\\\\\\\\\\\\\\\\\_______________\\//\\\\\\/\\\\\\_______/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\____\\/\\\\\\__/\\\\\\////\\\\\\____/\\\\\\\\\\\\\\\\\\\\_____\\/\\\\\\_______/\\\\\\__\\//\\\\\\_\\/\\\\\\___\\///_\r\n * __________\\/\\\\\\________\\/\\\\\\_/\\\\__\\//\\\\///////___\\//\\\\///////_________________\\//\\\\\\\\\\_______/\\\\\\/////\\\\\\_____\\/\\\\\\____\\/\\\\\\_\\/\\\\\\__\\/\\\\\\___/\\\\\\/////\\\\\\_____\\/\\\\\\_/\\\\__\\//\\\\\\__/\\\\\\__\\/\\\\\\_______\r\n * ________/\\\\\\\\\\\\\\\\\\\\\\____\\//\\\\\\\\\\____\\//\\\\\\\\\\\\\\\\\\\\__\\//\\\\\\\\\\\\\\\\\\\\________________\\//\\\\\\_______\\//\\\\\\\\\\\\\\\\/\\\\__/\\\\\\\\\\\\\\\\\\_\\/\\\\\\_\\//\\\\\\\\\\\\\\/\\\\_\\//\\\\\\\\\\\\\\\\/\\\\____\\//\\\\\\\\\\____\\///\\\\\\\\\\/___\\/\\\\\\______\r\n * ________\\///////////______\\/////______\\//////////____\\//////////__________________\\///_________\\////////\\//__\\/////////__\\///___\\///////\\//___\\////////\\//______\\/////_______\\/////_____\\///______\r\n * __________________________________________________________________________________________________________________________________________________________________________________________________\r\n *\r\n * @author [Tristan Valcke]{@link https://github.com/Itee}\r\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\r\n *\r\n * @file sources/itee-validators\r\n * @description This is the main entry point to bundle the itee validators package.\r\n * It expose all exports of the cores, maths and physics sub-folder.\r\n *\r\n */\r\n\r\nexport * from './cores/_cores'\r\nexport * from './maths/_maths'\r\nexport * from './physics/_physics'\r\n\r\n// #if IS_NODE\r\nexport * from './files/_files'\r\n// #endif\r\n"],"names":["validatorInstance"],"mappings":"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"}